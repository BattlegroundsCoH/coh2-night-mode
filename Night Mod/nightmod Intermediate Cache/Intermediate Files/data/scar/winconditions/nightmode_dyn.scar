import("ScarUtil.scar");

function NM_HookNightMode()

    -- list of blueprints to add new flare ability to
    nm_blueprintlist = {
        ["mortar_team_81mm_mp"] = BP_GetSquadBlueprint("3690fed557b44fc68b9753c2f52ed775:nm_mortar_team_81mm"),
        ["m1_81mm_mortar_squad_mp"] = BP_GetSquadBlueprint("3690fed557b44fc68b9753c2f52ed775:nm_m1_81mm_mortar_squad"),
        ["hm-120_38_mortar_squad_mp"] = BP_GetSquadBlueprint("3690fed557b44fc68b9753c2f52ed775:nm_hm-120_38_mortar_squad"),
        ["pm-82_41_mortar_squad_mp"] = BP_GetSquadBlueprint("3690fed557b44fc68b9753c2f52ed775:nm_pm-82_41_mortar_squad"),
    };
    
    -- Players to keep track of
    nm_players = {};

    -- For all players
    for i = 1, World_GetPlayerCount() do
        
        -- Get player pointer
        local player = World_GetPlayerAt(i);

        -- 'hook' player
        NM_HookPlayer(player);

    end

end

function NM_HookPlayer(player)
    local pid = Player_GetID(player);
    nm_players[pid] = {
        nm_player = player,
        player_group = SGroup_CreateIfNotFound("nm_p" ..pid),
    };
    if not Rule_Exists(NM_CheckPlayers) then
        Rule_AddInterval(NM_CheckPlayers, 0.15);
    end
end

function NM_CheckPlayers()
    for k, v in pairs(nm_players) do
        local sg_temp = Player_GetSquads( v.nm_player );
        SGroup_RemoveGroup(sg_temp, v.player_group);
        if (SGroup_Count(sg_temp) > 0) then
            SGroup_ForEach( sg_temp, NM_SquadSpawned ); 
            SGroup_AddGroup(v.player_group, sg_temp);
        end
        SGroup_Clear(sg_temp);
    end
end

function NM_SquadSpawned(sgroupid, itemindex, squadID)
    local sbp = nm_blueprintlist[BP_GetName(Squad_GetBlueprint(squadID))];
    if (sbp ~= nil ) then
        
        local pos = Squad_GetPosition(squadID);
        local posTarget = pos;
        
        if (Squad_HasDestination(squadID)) then
            Squad_GetDestination(squadID);
        end

        local player = Squad_GetPlayerOwner(squadID);

        Squad_Destroy(squadID);
        Squad_CreateAndSpawnToward( sbp, player, 0, pos, posTarget );

    end
end
